<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>